<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>